<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>